<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>